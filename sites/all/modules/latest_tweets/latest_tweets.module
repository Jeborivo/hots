<?php


/**
 * Implements hook_menu().
 */
function latest_tweets_menu() {
  $items = array();

  $items['admin/config/services/latest_posts'] = array(
    'title' => 'Latest tweets',
    'description' => 'Configuration for Latest tweets module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('latest_tweets_form'),
    'access arguments' => array('administer view modes settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function latest_tweets_form($form, &$vars)  {
  $form['twitter_username'] = array(
    '#type' => 'textfield',
    '#title' => 'Twitter list owner',
    '#description' => t('Please set handle of user who is list owner'),
    '#align' => 'left',
    '#required' => TRUE,
    '#default_value' => variable_get('twitter_username', 'NeonWormProphet'),
  );

  $form['twitter_consumer_key'] = array(
    '#type' => 'textfield',
    '#title' => 'Consumer key',
    '#description' => t("Consmer key can be found Twitter's Application management <a target='_blank' href='https://apps.twitter.com/'>page</a>"),
    '#align' => 'left',
    '#required' => TRUE,
    '#default_value' => variable_get('twitter_consumer_key', 'eFUTFk0M26IjL0beKE6MdYbGq'),
  );
  $form['twitter_consumer_secret'] = array(
    '#type' => 'textfield',
    '#title' => 'Consumer secret',
    '#description' => t("Consmer secret can be found Twitter's Application management <a target='_blank' href='https://apps.twitter.com/'>page</a>"),
    '#align' => 'left',
    '#required' => TRUE,
    '#default_value' => variable_get('twitter_consumer_secret', 'VmcBLnVgHjFt9IEvaTIYEHi4mxKUeEgnr38FcaXeogAvS1CqUU'),
  );
  $form['twitter_number_tweets'] = array(
    '#type' => 'select',
    '#title' => 'Please select number of tweets to present',
    '#options' => array(
      '2' => 2,
      '4' => 4,
      '6' => 6,
      '8' => 8,
    ),
    '#align' => 'left',
    '#default_value' => variable_get('twitter_number_tweets', 4),
  );
    return system_settings_form($form);
}


/**
 * Implements hook_block_info().
 */


function latest_tweets_block_info() {
  $blocks = array();

  $blocks['latest_tweets'] = array(
    'info' => t('Latest tweets'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function latest_tweets_block_view($delta = '') {
  $block = array();

  if ($delta == 'latest_tweets') {
    $block['subject'] = '';
    $block['content'] = getLatestTweets();
    ;

  }
  return $block;
}

function latest_tweets_theme() {
  return array(
    'latest_tweets_output' => array(
      'variables' => array(
        'title' => '',
        'content' => '',
        'tweeter_items' => NULL,
      ),
      'template' => 'templates/latest_tweets-block--block',
    ),
  );
}

function getLatestTweets() {

  $tweeter_items = &drupal_static(__FUNCTION__);


      $data_username = variable_get('twitter_username');
      $data_count = variable_get('twitter_number_tweets', 4);
      $data_url = 'https://api.twitter.com/1.1/statuses/user_timeline.json';
      $consumerkey = variable_get('twitter_consumer_key');
      $consumersecret = variable_get('twitter_consumer_secret');

      $api_key = urlencode($consumerkey); // Consumer Key (API Key)
      $api_secret = urlencode($consumersecret); // Consumer Secret (API Secret)
      $auth_url = 'https://api.twitter.com/oauth2/token';


      $api_credentials = base64_encode($api_key . ':' . $api_secret);
      $auth_headers = 'Authorization: Basic ' . $api_credentials . "\r\n" .
        'Content-Type: application/x-www-form-urlencoded;charset=UTF-8' . "\r\n";


      $auth_context = stream_context_create(
        array(
          'http' => array(
            'header' => $auth_headers,
            'method' => 'POST',
            'content' => http_build_query(array('grant_type' => 'client_credentials',)),
          )
        )
      );

      $auth_response = json_decode(file_get_contents($auth_url, 0, $auth_context), TRUE);
      $auth_token = $auth_response['access_token'];

      $data_context = stream_context_create(array('http' => array('header' => 'Authorization: Bearer ' . $auth_token . "\r\n",)));
      $data = json_decode(file_get_contents($data_url . '?screen_name=' . $data_username . '&count=' . $data_count, 0, $data_context), TRUE);

      $tweeter_items = array();
      foreach ($data as $tweet) {

        if (isset($tweet['retweeted_status'])) {
          $text = "RT @" . $tweet['retweeted_status']['user']['screen_name'] . ": " . $tweet['retweeted_status']['text'] . "";
        }
        else {
          $text = $tweet['text'];
        }

        $patterns = array(
          '@(https?://([-\w\.]+)+(:\d+)?(/([\w/_\.]*(\?\S+)?)?)?)@',
          '/@([A-Za-z0-9_]{1,15})/',
          '/#+([a-zA-Z0-9_]+)/'
        );
        $replace = array(
          '<a target="_blank" href="$1">$1</a>',
          '<a target="_blank" href="http://twitter.com/$1">@$1</a>',
          '<a target="_blank" href="https://twitter.com/hashtag/$1?src=hash">#$1</a>'
        );
        $result = preg_replace($patterns, $replace, $text);

        $tweeter_items[] = array(
          "#prefix" => '<div class="col-md-6">',
          "#markup" => '<div class="tw-message">' . $result . '</div> - <a class="tw-user" href="http://twitter.com/' . $tweet['user']['screen_name'] . '">' . $tweet['user']['name'] . '</a>',
          "#suffix" => '</div>',
        );
      }
      cache_set('twitter_data', $tweeter_items, 'cache', time() + 120);



  return theme('latest_tweets_output', array(
      'tweeter_items' => $tweeter_items,
    )
  );
}
